@page
@model ShoppingCart.Service.Pages.CartModel

@{
    ViewData["Title"] = "Shopping Cart";
}

<h1>Cart</h1>

<p>
    Your Order (#) @Html.DisplayFor(modelItem => modelItem.Order.Id)
    <a asp-page="/AddItem">Add item to cart</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Item.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Item.Price)
            </th>
            <th>
                Delete Item
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (OrderItem item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Item.Price)
                </td>
                <td>
                    <a asp-page="/Cart" asp-page-handler="remove" asp-route-id="@(item.Item.Id)">Remove Item</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<a asp-page="/Cart" asp-page-handler="delete">Delete Cart</a>
<br />
<br />
<div id="smart-button-container">
    <div style="text-align: center;">
        <div id="paypal-button-container"></div>
    </div>
</div>

@if (Model.Items?.Count > 0)
{
    <script src="https://www.paypal.com/sdk/js?client-id=@(Model.PaypalClientId)&currency=USD" data-sdk-integration-source="button-factory"></script>
    <script>
        function initPayPalButton() {
            paypal.Buttons({
                style: {
                    shape: 'pill',
                    color: 'blue',
                    layout: 'horizontal',
                    label: 'paypal',
                    tagline: true
                },

                createOrder: function(data, actions) {
                    return actions.order.create({
                        purchase_units: [{"amount":{"currency_code":"USD","value":@(Model.Items.Sum(i=>i.Count * i.Item.Price))}}]
                    });
                },

                onApprove: function(data, actions) {
                    return actions.order.capture().then(function (details) {
                        //transaction was completed, complete the order
                        window.location = "/Cart?handler=purchase";
                    });
                },

                onError: function(err) {
                    console.log(err);
                }
            }).render('#paypal-button-container');
        }
        initPayPalButton();
    </script>
}
